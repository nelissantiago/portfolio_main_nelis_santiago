// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

enum Difficulty {
  Easy
  Medium
  Hard
}

model Newaccount {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  slug        String @unique
  title       String
  description String

  embedId String

  difficulty Difficulty @default(Easy)

  tags ChallengeTags[]

  @@map("newaccounts")
}

model Tag {
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  name       String          @unique
  slug       String          @unique
  newaccounts ChallengeTags[]

  @@map("tags")
}

model ChallengeTags {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  NewAccount   Newaccount @relation(fields: [challengeId], references: [id])
  challengeId String    @db.ObjectId
  tag         Tag       @relation(fields: [tagId], references: [id])
  tagId       String    @db.ObjectId

  @@map("challengeTags")
}
